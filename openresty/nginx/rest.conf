# variable used by lua code, needs to match line below
set $rest_prefix "/api";

location /api/rpc/refresh_token {
    if ($cookie_REFRESHTOKEN != ""){
        more_set_input_headers 'Refresh-Token: $cookie_REFRESHTOKEN';
        rewrite_body_with_refresh_token '../lualib/user_code/internal_rest_refresh_token.lua';
    }

    rewrite ^/api/(.*)$ /internal/api/$1;
}

# user facing location for the rest api
location /api {
    include cors.conf;

    if ($cookie_JWTTOKEN != ""){
        more_set_input_headers 'Authorization: Bearer $cookie_JWTTOKEN';
    }

    # rewrite for the main internal location
    rewrite ^/api/(.*)$ /internal/api/$1;
}



# main internal location that will farward requests to PostgREST
location /internal/api/ {
    # this location is only avalable through internal redirects
    internal;
    default_type  application/json;

    rewrite_by_lua_file '../lualib/user_code/internal_rest_rewrite_phase.lua';
    header_filter_by_lua_file '../lualib/user_code/internal_rest_header_filter_phase.lua';
    body_filter_by_lua_file '../lualib/user_code/internal_rest_body_filter_phase.lua';

    proxy_set_header  Accept-Encoding  ""; #force postgrest not to gzip the output
    proxy_set_header  Connection ""; #optimise communication with upstream (keep alive)
    proxy_set_header  Host $host;
    proxy_http_version 1.1;
    set_by_lua_block $postgrest_host  { return os.getenv('POSTGREST_HOST') or "0" }
    set_by_lua_block $postgrest_port  { return os.getenv('POSTGREST_PORT') or "0" }
    proxy_pass http://$postgrest_host:$postgrest_port; # Reverse proxy to your PostgREST
    
    # Rewrite the Content-Location header to match our location
    proxy_hide_header Content-Location;
    set_by_lua_block $rest_prefix  { return ngx.var.rest_prefix or "/api" } # this needs to match user facing location path
    more_set_headers 'Content-Location: $rest_prefix$upstream_http_content_location';

    # Debug Info
    if ($development = "1") {
        more_set_headers 'Request-Time: $request_time';
    }

    # this needs to be at the end
    rewrite    /internal/api(.+) $1 break;
}
